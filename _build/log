# dune exec ./NewsParser.exe
# OCAMLPARAM: unset
# Workspace root:
# /Users/meganphibbons/Documents/School/390/FinalProject/NewsParser
$ /usr/bin/getconf _NPROCESSORS_ONLN > /var/folders/hc/5_db2trx0ssc7lyr1fdt5qlw0000gn/T/dune0b26d8.output 2> /dev/null
# Auto-detected concurrency: 8
# disable binary cache
$ /Users/meganphibbons/.opam/4.12.0/bin/ocamlc.opt -config > /var/folders/hc/5_db2trx0ssc7lyr1fdt5qlw0000gn/T/dune5c0ea7.output
# Dune context:
#  { name = "default"
#  ; kind = "default"
#  ; profile = Dyn
#  ; merlin = true
#  ; for_host = None
#  ; fdo_target_exe = None
#  ; build_dir = "default"
#  ; toplevel_path =
#      Some External "/Users/meganphibbons/.opam/4.12.0/lib/toplevel"
#  ; ocaml_bin = External "/Users/meganphibbons/.opam/4.12.0/bin"
#  ; ocaml = Ok External "/Users/meganphibbons/.opam/4.12.0/bin/ocaml"
#  ; ocamlc = External "/Users/meganphibbons/.opam/4.12.0/bin/ocamlc.opt"
#  ; ocamlopt =
#      Ok External "/Users/meganphibbons/.opam/4.12.0/bin/ocamlopt.opt"
#  ; ocamldep =
#      Ok External "/Users/meganphibbons/.opam/4.12.0/bin/ocamldep.opt"
#  ; ocamlmklib =
#      Ok External "/Users/meganphibbons/.opam/4.12.0/bin/ocamlmklib.opt"
#  ; env =
#      map
#        { "DUNE_OCAML_HARDCODED" : "/Users/meganphibbons/.opam/4.12.0/lib"
#        ; "DUNE_OCAML_STDLIB" : "/Users/meganphibbons/.opam/4.12.0/lib/ocaml"
#        ; "DUNE_SOURCEROOT" :
#            "/Users/meganphibbons/Documents/School/390/FinalProject/NewsParser"
#        ; "INSIDE_DUNE" :
#            "/Users/meganphibbons/Documents/School/390/FinalProject/NewsParser/_build/default"
#        ; "OCAMLFIND_IGNORE_DUPS_IN" :
#            "/Users/meganphibbons/Documents/School/390/FinalProject/NewsParser/_build/install/default/lib"
#        ; "OCAMLPATH" :
#            "/Users/meganphibbons/Documents/School/390/FinalProject/NewsParser/_build/install/default/lib"
#        ; "OCAMLTOP_INCLUDE_PATH" :
#            "/Users/meganphibbons/Documents/School/390/FinalProject/NewsParser/_build/install/default/lib/toplevel"
#        ; "OCAML_COLOR" : "always"
#        ; "OPAMCOLOR" : "always"
#        }
#  ; findlib_path = [ External "/Users/meganphibbons/.opam/4.12.0/lib" ]
#  ; arch_sixtyfour = true
#  ; natdynlink_supported = true
#  ; supports_shared_libraries = true
#  ; ocaml_config =
#      { version = "4.12.0"
#      ; standard_library_default =
#          "/Users/meganphibbons/.opam/4.12.0/lib/ocaml"
#      ; standard_library = "/Users/meganphibbons/.opam/4.12.0/lib/ocaml"
#      ; standard_runtime = "the_standard_runtime_variable_was_deleted"
#      ; ccomp_type = "cc"
#      ; c_compiler = "cc"
#      ; ocamlc_cflags = [ "-O2"; "-fno-strict-aliasing"; "-fwrapv" ]
#      ; ocamlc_cppflags = [ "-D_FILE_OFFSET_BITS=64"; "-D_REENTRANT" ]
#      ; ocamlopt_cflags = [ "-O2"; "-fno-strict-aliasing"; "-fwrapv" ]
#      ; ocamlopt_cppflags = [ "-D_FILE_OFFSET_BITS=64"; "-D_REENTRANT" ]
#      ; bytecomp_c_compiler =
#          [ "cc"
#          ; "-O2"
#          ; "-fno-strict-aliasing"
#          ; "-fwrapv"
#          ; "-D_FILE_OFFSET_BITS=64"
#          ; "-D_REENTRANT"
#          ]
#      ; bytecomp_c_libraries = [ "-lm"; "-lpthread" ]
#      ; native_c_compiler =
#          [ "cc"
#          ; "-O2"
#          ; "-fno-strict-aliasing"
#          ; "-fwrapv"
#          ; "-D_FILE_OFFSET_BITS=64"
#          ; "-D_REENTRANT"
#          ]
#      ; native_c_libraries = [ "-lm" ]
#      ; cc_profile = []
#      ; architecture = "arm64"
#      ; model = "default"
#      ; int_size = 63
#      ; word_size = 64
#      ; system = "macosx"
#      ; asm = [ "clang"; "-c"; "-Wno-trigraphs" ]
#      ; asm_cfi_supported = true
#      ; with_frame_pointers = false
#      ; ext_exe = ""
#      ; ext_obj = ".o"
#      ; ext_asm = ".s"
#      ; ext_lib = ".a"
#      ; ext_dll = ".so"
#      ; os_type = "Unix"
#      ; default_executable_name = "a.out"
#      ; systhread_supported = true
#      ; host = "aarch64-apple-darwin20.1.0"
#      ; target = "aarch64-apple-darwin20.1.0"
#      ; profiling = false
#      ; flambda = false
#      ; spacetime = false
#      ; safe_string = true
#      ; exec_magic_number = "Caml1999X029"
#      ; cmi_magic_number = "Caml1999I029"
#      ; cmo_magic_number = "Caml1999O029"
#      ; cma_magic_number = "Caml1999A029"
#      ; cmx_magic_number = "Caml1999Y029"
#      ; cmxa_magic_number = "Caml1999Z029"
#      ; ast_impl_magic_number = "Caml1999M029"
#      ; ast_intf_magic_number = "Caml1999N029"
#      ; cmxs_magic_number = "Caml1999D029"
#      ; cmt_magic_number = "Caml1999T029"
#      ; natdynlink_supported = true
#      ; supports_shared_libraries = true
#      ; windows_unicode = false
#      }
#  }
# Workspace root:
# /Users/meganphibbons/Documents/School/390/FinalProject/NewsParser
$ (cd _build/default && /Users/meganphibbons/.opam/4.12.0/bin/ocamldep.opt -modules -impl KeywordGenerator.ml) > _build/default/.NewsParser.eobjs/KeywordGenerator.ml.d
> File "KeywordGenerator.ml", line 44, characters 73-75:
> 44 |   let word_list = (Str.split whitespace (Str.global_replace (Str.regexp "\.") " " article_text)) in 
>                                                                               ^^
> Warning 14 [illegal-backslash]: illegal backslash escape in string.
$ (cd _build/default && /Users/meganphibbons/.opam/4.12.0/bin/ocamlc.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -bin-annot -I .NewsParser.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .NewsParser.eobjs/byte/dune__exe__KeywordGenerator.cmo -c -impl KeywordGenerator.ml)
> File "KeywordGenerator.ml", line 44, characters 73-75:
> 44 |   let word_list = (Str.split whitespace (Str.global_replace (Str.regexp "\.") " " article_text)) in 
>                                                                               ^^
> Warning 14 [illegal-backslash]: illegal backslash escape in string.
> File "KeywordGenerator.ml", line 16, characters 8-19:
> 16 | let rec print_table table = 
>              ^^^^^^^^^^^
> Warning 39 [unused-rec-flag]: unused rec flag.
> File "KeywordGenerator.ml", line 28, characters 5-9:
> 28 |   | (hkey, hval)::t when value > hval -> (key, value)::pq
>           ^^^^
> Warning 27 [unused-var-strict]: unused variable hkey.
> File "KeywordGenerator.ml", line 28, characters 18-19:
> 28 |   | (hkey, hval)::t when value > hval -> (key, value)::pq
>                        ^
> Warning 27 [unused-var-strict]: unused variable t.
$ (cd _build/default && /Users/meganphibbons/.opam/4.12.0/bin/ocamlc.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -bin-annot -I .NewsParser.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .NewsParser.eobjs/byte/dune__exe__NewsParser.cmo -c -impl NewsParser.ml)
> File "NewsParser.ml", line 30, characters 8-12:
> 30 | let rec next token_check = function 
>              ^^^^
> Warning 39 [unused-rec-flag]: unused rec flag.
> File "NewsParser.ml", line 50, characters 4-5:
> 50 |   | _ -> (raise (BadListError "Shouldn't reach this catch-all for lists"))
>          ^
> Warning 11 [redundant-case]: this match case is unused.
> File "NewsParser.ml", lines 62-63, characters 4-59:
> 62 | ....let INT(nh)::nt = (next COLON t) in 
> 63 |     (populate_json ({curr_json_rec with id = Some(nh)}) nt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (TRUE|FALSE|NULL|LEFT_CURL|RIGHT_CURL|LEFT_SQUARE|RIGHT_SQUARE|COLON|COMMA|
> ID|DELETED|TYPE|BY|TIME|TEXT|DEAD|PARENT|POLL|KIDS|URL|SCORE|TITLE|PARTS|
> DESCENDANTS|FLOAT _|STRING _)::_
> File "NewsParser.ml", lines 65-66, characters 4-66:
> 65 | ....let STRING(nh)::nt = (next COLON t) in 
> 66 |     (populate_json ({curr_json_rec with post_type = Some(nh)}) nt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (TRUE|FALSE|NULL|LEFT_CURL|RIGHT_CURL|LEFT_SQUARE|RIGHT_SQUARE|COLON|COMMA|
> ID|DELETED|TYPE|BY|TIME|TEXT|DEAD|PARENT|POLL|KIDS|URL|SCORE|TITLE|PARTS|
> DESCENDANTS|INT _|FLOAT _)::_
> File "NewsParser.ml", lines 68-69, characters 4-61:
> 68 | ....let STRING(nh)::nt = (next COLON t) in 
> 69 |     (populate_json ({curr_json_rec with text = Some(nh)}) nt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (TRUE|FALSE|NULL|LEFT_CURL|RIGHT_CURL|LEFT_SQUARE|RIGHT_SQUARE|COLON|COMMA|
> ID|DELETED|TYPE|BY|TIME|TEXT|DEAD|PARENT|POLL|KIDS|URL|SCORE|TITLE|PARTS|
> DESCENDANTS|INT _|FLOAT _)::_
> File "NewsParser.ml", lines 71-72, characters 4-63:
> 71 | ....let INT(nh)::nt = (next COLON t) in 
> 72 |     (populate_json ({curr_json_rec with parent = Some(nh)}) nt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (TRUE|FALSE|NULL|LEFT_CURL|RIGHT_CURL|LEFT_SQUARE|RIGHT_SQUARE|COLON|COMMA|
> ID|DELETED|TYPE|BY|TIME|TEXT|DEAD|PARENT|POLL|KIDS|URL|SCORE|TITLE|PARTS|
> DESCENDANTS|FLOAT _|STRING _)::_
> File "NewsParser.ml", lines 74-76, characters 4-96:
> 74 | ....let nh::nt = (next COLON t) in 
> 75 |     let (int_list, remaining) = make_list [] nt in
> 76 |     (populate_json ({curr_json_rec with kids = Some(List.map int_of_token int_list)}) remaining)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> []
> File "NewsParser.ml", lines 78-79, characters 4-62:
> 78 | ....let STRING(nh)::nt = (next COLON t) in 
> 79 |     (populate_json ({curr_json_rec with title = Some(nh)}) nt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (TRUE|FALSE|NULL|LEFT_CURL|RIGHT_CURL|LEFT_SQUARE|RIGHT_SQUARE|COLON|COMMA|
> ID|DELETED|TYPE|BY|TIME|TEXT|DEAD|PARENT|POLL|KIDS|URL|SCORE|TITLE|PARTS|
> DESCENDANTS|INT _|FLOAT _)::_
> File "NewsParser.ml", lines 81-82, characters 4-68:
> 81 | ....let INT(nh)::nt = (next COLON t) in 
> 82 |     (populate_json ({curr_json_rec with descendants = Some(nh)}) nt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (TRUE|FALSE|NULL|LEFT_CURL|RIGHT_CURL|LEFT_SQUARE|RIGHT_SQUARE|COLON|COMMA|
> ID|DELETED|TYPE|BY|TIME|TEXT|DEAD|PARENT|POLL|KIDS|URL|SCORE|TITLE|PARTS|
> DESCENDANTS|FLOAT _|STRING _)::_
> File "NewsParser.ml", line 84, characters 4-5:
> 84 |   | _ -> curr_json_rec
>          ^
> Warning 11 [redundant-case]: this match case is unused.
> File "NewsParser.ml", line 46, characters 7-8:
> 46 |   | h::t when h = LEFT_SQUARE -> (raise (BadListError "Shouldn't have another bracket"))
>             ^
> Warning 27 [unused-var-strict]: unused variable t.
> File "NewsParser.ml", line 74, characters 8-10:
> 74 |     let nh::nt = (next COLON t) in 
>              ^^
> Warning 27 [unused-var-strict]: unused variable nh.
> File "NewsParser.ml", line 83, characters 4-5:
> 83 |   | h::t -> populate_json curr_json_rec t
>          ^
> Warning 27 [unused-var-strict]: unused variable h.
$ (cd _build/default && /Users/meganphibbons/.opam/4.12.0/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -I .NewsParser.eobjs/byte -I .NewsParser.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .NewsParser.eobjs/native/dune__exe__KeywordGenerator.cmx -c -impl KeywordGenerator.ml)
> File "KeywordGenerator.ml", line 44, characters 73-75:
> 44 |   let word_list = (Str.split whitespace (Str.global_replace (Str.regexp "\.") " " article_text)) in 
>                                                                               ^^
> Warning 14 [illegal-backslash]: illegal backslash escape in string.
> File "KeywordGenerator.ml", line 16, characters 8-19:
> 16 | let rec print_table table = 
>              ^^^^^^^^^^^
> Warning 39 [unused-rec-flag]: unused rec flag.
> File "KeywordGenerator.ml", line 28, characters 5-9:
> 28 |   | (hkey, hval)::t when value > hval -> (key, value)::pq
>           ^^^^
> Warning 27 [unused-var-strict]: unused variable hkey.
> File "KeywordGenerator.ml", line 28, characters 18-19:
> 28 |   | (hkey, hval)::t when value > hval -> (key, value)::pq
>                        ^
> Warning 27 [unused-var-strict]: unused variable t.
$ (cd _build/default && /Users/meganphibbons/.opam/4.12.0/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -I .NewsParser.eobjs/byte -I .NewsParser.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .NewsParser.eobjs/native/dune__exe__NewsParser.cmx -c -impl NewsParser.ml)
> File "NewsParser.ml", line 30, characters 8-12:
> 30 | let rec next token_check = function 
>              ^^^^
> Warning 39 [unused-rec-flag]: unused rec flag.
> File "NewsParser.ml", line 50, characters 4-5:
> 50 |   | _ -> (raise (BadListError "Shouldn't reach this catch-all for lists"))
>          ^
> Warning 11 [redundant-case]: this match case is unused.
> File "NewsParser.ml", lines 62-63, characters 4-59:
> 62 | ....let INT(nh)::nt = (next COLON t) in 
> 63 |     (populate_json ({curr_json_rec with id = Some(nh)}) nt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (TRUE|FALSE|NULL|LEFT_CURL|RIGHT_CURL|LEFT_SQUARE|RIGHT_SQUARE|COLON|COMMA|
> ID|DELETED|TYPE|BY|TIME|TEXT|DEAD|PARENT|POLL|KIDS|URL|SCORE|TITLE|PARTS|
> DESCENDANTS|FLOAT _|STRING _)::_
> File "NewsParser.ml", lines 65-66, characters 4-66:
> 65 | ....let STRING(nh)::nt = (next COLON t) in 
> 66 |     (populate_json ({curr_json_rec with post_type = Some(nh)}) nt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (TRUE|FALSE|NULL|LEFT_CURL|RIGHT_CURL|LEFT_SQUARE|RIGHT_SQUARE|COLON|COMMA|
> ID|DELETED|TYPE|BY|TIME|TEXT|DEAD|PARENT|POLL|KIDS|URL|SCORE|TITLE|PARTS|
> DESCENDANTS|INT _|FLOAT _)::_
> File "NewsParser.ml", lines 68-69, characters 4-61:
> 68 | ....let STRING(nh)::nt = (next COLON t) in 
> 69 |     (populate_json ({curr_json_rec with text = Some(nh)}) nt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (TRUE|FALSE|NULL|LEFT_CURL|RIGHT_CURL|LEFT_SQUARE|RIGHT_SQUARE|COLON|COMMA|
> ID|DELETED|TYPE|BY|TIME|TEXT|DEAD|PARENT|POLL|KIDS|URL|SCORE|TITLE|PARTS|
> DESCENDANTS|INT _|FLOAT _)::_
> File "NewsParser.ml", lines 71-72, characters 4-63:
> 71 | ....let INT(nh)::nt = (next COLON t) in 
> 72 |     (populate_json ({curr_json_rec with parent = Some(nh)}) nt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (TRUE|FALSE|NULL|LEFT_CURL|RIGHT_CURL|LEFT_SQUARE|RIGHT_SQUARE|COLON|COMMA|
> ID|DELETED|TYPE|BY|TIME|TEXT|DEAD|PARENT|POLL|KIDS|URL|SCORE|TITLE|PARTS|
> DESCENDANTS|FLOAT _|STRING _)::_
> File "NewsParser.ml", lines 74-76, characters 4-96:
> 74 | ....let nh::nt = (next COLON t) in 
> 75 |     let (int_list, remaining) = make_list [] nt in
> 76 |     (populate_json ({curr_json_rec with kids = Some(List.map int_of_token int_list)}) remaining)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> []
> File "NewsParser.ml", lines 78-79, characters 4-62:
> 78 | ....let STRING(nh)::nt = (next COLON t) in 
> 79 |     (populate_json ({curr_json_rec with title = Some(nh)}) nt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (TRUE|FALSE|NULL|LEFT_CURL|RIGHT_CURL|LEFT_SQUARE|RIGHT_SQUARE|COLON|COMMA|
> ID|DELETED|TYPE|BY|TIME|TEXT|DEAD|PARENT|POLL|KIDS|URL|SCORE|TITLE|PARTS|
> DESCENDANTS|INT _|FLOAT _)::_
> File "NewsParser.ml", lines 81-82, characters 4-68:
> 81 | ....let INT(nh)::nt = (next COLON t) in 
> 82 |     (populate_json ({curr_json_rec with descendants = Some(nh)}) nt)
> Warning 8 [partial-match]: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (TRUE|FALSE|NULL|LEFT_CURL|RIGHT_CURL|LEFT_SQUARE|RIGHT_SQUARE|COLON|COMMA|
> ID|DELETED|TYPE|BY|TIME|TEXT|DEAD|PARENT|POLL|KIDS|URL|SCORE|TITLE|PARTS|
> DESCENDANTS|FLOAT _|STRING _)::_
> File "NewsParser.ml", line 84, characters 4-5:
> 84 |   | _ -> curr_json_rec
>          ^
> Warning 11 [redundant-case]: this match case is unused.
> File "NewsParser.ml", line 46, characters 7-8:
> 46 |   | h::t when h = LEFT_SQUARE -> (raise (BadListError "Shouldn't have another bracket"))
>             ^
> Warning 27 [unused-var-strict]: unused variable t.
> File "NewsParser.ml", line 74, characters 8-10:
> 74 |     let nh::nt = (next COLON t) in 
>              ^^
> Warning 27 [unused-var-strict]: unused variable nh.
> File "NewsParser.ml", line 83, characters 4-5:
> 83 |   | h::t -> populate_json curr_json_rec t
>          ^
> Warning 27 [unused-var-strict]: unused variable h.
$ (cd _build/default && /Users/meganphibbons/.opam/4.12.0/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -o NewsParser.exe /Users/meganphibbons/.opam/4.12.0/lib/ocaml/str.cmxa -I /Users/meganphibbons/.opam/4.12.0/lib/ocaml .NewsParser.eobjs/native/dune__exe.cmx .NewsParser.eobjs/native/dune__exe__Tokens.cmx .NewsParser.eobjs/native/dune__exe__KeywordGenerator.cmx .NewsParser.eobjs/native/dune__exe__NewsParser.cmx)
